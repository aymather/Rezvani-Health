<!-- HTML code -->
<div class="finished-member-wrap">
    <h1 class="title-text">Metabolic Type: <span class='highlight'><%= member.Metabolic_Type %></span></h1>
    <div id="chartdiv"></div>
    <h1><a href=<%= auth_uri + stateObj %>>Continue by Authenticating with Oura</a></h1>
</div>

<!-- Chart javascript code -->
<script>

    var protein = '<%= member.Macros.protein %>',
        fat = '<%= member.Macros.fat %>',
        carbs = '<%= member.Macros.carb %>';

    am4core.ready(() => {
    
    // Themes begin
    am4core.useTheme(am4themes_dark);
    am4core.useTheme(am4themes_animated);
    // Themes end
    
    // Create chart instance
    var chart = am4core.create("chartdiv", am4charts.PieChart);
    
    // Set data
    var selected;
    var types = [{
        type: "Protein",
        percent: (100 * protein),
        color: chart.colors.getIndex(0),
    }, {
        type: "Fat",
        percent: (100 * fat),
        color: chart.colors.getIndex(1),
    }, {
        type: "Carbohydrates",
        percent: (100 * carbs),
        color: chart.colors.getIndex(2),
        subs: [
            {
                type: "Hydro",
                percent: 15
            }, 
            {
                type: "Wind",
                percent: 10
            }, 
            {
                type: "Other",
                percent: 5
            }
        ]
    }];
    
    // Add data
    chart.data = generateChartData();
    
    // Add and configure Series
    var pieSeries = chart.series.push(new am4charts.PieSeries());
    pieSeries.dataFields.value = "percent";
    pieSeries.dataFields.category = "type";
    pieSeries.slices.template.propertyFields.fill = "color";
    pieSeries.slices.template.propertyFields.isActive = "pulled";
    pieSeries.slices.template.strokeWidth = 0;
    
    function generateChartData() {
        var chartData = [];
        for (var i = 0; i < types.length; i++) {
            if (i == selected) {
                for (var x = 0; x < types[i].subs.length; x++) {
                    chartData.push({
                        type: types[i].subs[x].type,
                        percent: types[i].subs[x].percent,
                        color: types[i].color,
                        pulled: true
                    });
                }
            } else {
                chartData.push({
                    type: types[i].type,
                    percent: types[i].percent,
                    color: types[i].color,
                    id: i
                });
            }
        }
        return chartData;
    }
    
    pieSeries.slices.template.events.on("hit", function(event) {
        if (event.target.dataItem.dataContext.id != undefined) {
        selected = event.target.dataItem.dataContext.id;
        } else {
        selected = undefined;
        }
        chart.data = generateChartData();
    });
    
    }); // end am4core.ready()
</script>